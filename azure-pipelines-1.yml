trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: Build_Job
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'publish'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/publish'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '$(solution)'
        arguments: '--configuration $(buildConfiguration)'

- stage: Dev
  dependsOn: Build
  jobs:
  - deployment: Dev_Deployment
    environment: 'Dev'  # Match this with the Azure DevOps Environment name
    variables:
      environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Dev'
            inputs:
              azureSubscription: 'Your Azure Subscription'   # Set the correct Azure Subscription
              appName: 'your-dev-app'                         # Set the correct App Service name
              package: '$(Build.ArtifactStagingDirectory)/publish'  # Path to published files
              deployToSlotOrASE: true
              resourceGroupName: 'your-resource-group'            # Ensure this is correct
              appType: 'webApp'  # Set this to 'webApp' for Windows-based web app

- stage: Testing
  dependsOn: Build
  jobs:
  - deployment: Testing_Deployment
    environment: 'Testing'  # Match this with the Azure DevOps Environment name
    variables:
      environment: 'Testing'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Testing'
            inputs:
              azureSubscription: 'Your Azure Subscription'
              appName: 'your-testing-app'                        # Set the correct App Service name
              package: '$(Build.ArtifactStagingDirectory)/publish'
              deployToSlotOrASE: true
              resourceGroupName: 'your-resource-group'
              appType: 'webApp'  # Set this to 'webApp' for Windows-based web app

- stage: Production
  dependsOn: Build
  jobs:
  - deployment: Production_Deployment
    environment: 'Production'  # Match this with the Azure DevOps Environment name
    variables:
      environment: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy to Production'
            inputs:
              azureSubscription: 'Your Azure Subscription'
              appName: 'your-production-app'                     # Set the correct App Service name
              package: '$(Build.ArtifactStagingDirectory)/publish'
              deployToSlotOrASE: true
              resourceGroupName: 'your-resource-group'
              appType: 'webApp'  # Set this to 'webApp' for Windows-based web app
